:host {
    display: flex;
}

.nav.wrapper {
    display: flex;
    justify-content: center;
    padding: 1rem;
    padding-inline-start: 0;
    height: 4.5rem;

    ul {
        font-size: clamp(1rem, 2vw + 1rem, .875rem);
        padding-block-start: 6rem;

        @media screen and (min-width: 768px) {
            display: flex;
            flex-direction: row;
            align-items: center;
            padding-block-start: 0;
        }
    }

    li {
        display: none;
        padding: .5rem 3rem .5rem .5rem;

        @media only screen and (min-width: 768px) {
            padding-inline: 1.5rem;
            display: block;
        }
    }

    mat-icon {
        z-index: 12;
        color: white;
        pointer-events: all;
        font-size: 2.5rem;
        width: auto;
        height: 2.5rem;

        @media only screen and (min-width: 768px) {
            display: none;
        }
    }

    &.open {
        ul {
            background-color: black;
            position: fixed;
            inset: 0;
            z-index: 10;
            padding-block-start: 10rem;
        }

        li {
            display: block;
        }

    }
}

.box {
    --border-size: 3px;
    --border-angle: 0turn;
    padding: 1rem 1.5rem;
    display: block;
    transition: opacity 200ms ease-in-out;

    &:hover,
    &.isActive {
        background-image: conic-gradient(from var(--border-angle),
                #213,
                #112 50%,
                #213),
            conic-gradient(from var(--border-angle), transparent 20%, #08f, #f03);
        background-size: calc(100% - (var(--border-size) * 2)) calc(100% - (var(--border-size) * 2)),
            cover;
        background-position: center center;
        background-repeat: no-repeat;

        animation: bg-spin 3s linear infinite;

        @keyframes bg-spin {
            to {
                --border-angle: 1turn;
            }
        }

        transition: opacity 200ms ease-in-out;
    }
}

@property --border-angle {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0turn;
}
